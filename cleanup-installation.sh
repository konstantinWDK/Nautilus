#!/bin/bash
# Script de limpieza para Nautilus VSCode Widget
# Resuelve conflictos de instalaci√≥n entre versiones

echo "====================================================="
echo "  Limpieza de Instalaci√≥n - Nautilus VSCode Widget"
echo "====================================================="
echo ""

echo "üîÑ Deteniendo procesos en ejecuci√≥n..."
pkill -f "nautilus-vscode-widget" 2>/dev/null || true
pkill -f "nautilus-vscode-widget.py" 2>/dev/null || true

# Esperar para asegurar que los procesos se detengan
sleep 2

echo "üóëÔ∏è  Limpiando instalaciones anteriores..."

# Limpiar instalaci√≥n de paquete .deb si existe
if dpkg -l | grep -q "nautilus-vscode-widget"; then
    echo "üì¶ Eliminando paquete .deb instalado..."
    sudo dpkg --remove --force-remove-reinstreq nautilus-vscode-widget 2>/dev/null || true
    sudo apt remove --purge nautilus-vscode-widget 2>/dev/null || true
fi

# Limpiar archivos de dpkg si hay estado inconsistente
echo "üßπ Limpiando estado de dpkg..."
sudo mv /var/lib/dpkg/info/nautilus-vscode-widget.* /tmp/ 2>/dev/null || true

# Limpiar archivos manualmente
echo "üìÅ Eliminando archivos de instalaci√≥n..."
sudo rm -f /usr/bin/nautilus-vscode-widget 2>/dev/null || true
sudo rm -rf /usr/share/nautilus-vscode-widget 2>/dev/null || true
sudo rm -f /usr/share/applications/nautilus-vscode-widget.desktop 2>/dev/null || true
sudo rm -rf /usr/share/doc/nautilus-vscode-widget 2>/dev/null || true

# Limpiar instalaci√≥n local
echo "üè† Limpiando instalaci√≥n local..."
rm -f "$HOME/.local/share/applications/nautilus-vscode-widget.desktop" 2>/dev/null || true

# Limpiar autostart
echo "üöÄ Limpiando inicio autom√°tico..."
rm -f "$HOME/.config/autostart/nautilus-vscode-widget.desktop" 2>/dev/null || true

# Limpiar configuraci√≥n (opcional - comentado para preservar configuraciones)
# echo "‚öôÔ∏è  Limpiando configuraci√≥n..."
# rm -rf "$HOME/.config/nautilus-vscode-widget" 2>/dev/null || true

echo ""
echo "‚úÖ Limpieza completada!"
echo ""
echo "Ahora puedes:"
echo "  1. Instalar desde el repositorio: git pull"
echo "  2. Usar install.sh para instalaci√≥n local"
echo "  3. Usar linux/build-deb.sh para crear paquete .deb"
echo ""
echo "üí° Recomendaci√≥n:"
echo "   Para evitar conflictos, usa solo un m√©todo de instalaci√≥n:"
echo "   - O instalaci√≥n local (install.sh)"
echo "   - O paquete .deb (build-deb.sh)"
echo ""
echo "====================================================="
